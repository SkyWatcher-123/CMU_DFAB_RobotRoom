<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->
  <arg name="sim" default="false" />
  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="irb6640_robot_ip" unless="$(arg sim)" default="192.168.1.20"/>
  <arg name="irb4400_robot_ip" unless="$(arg sim)" default="192.168.1.10" />
  <arg name="6640_ns" default="irb6640" />
  <arg name="4400_ns" default="irb4400" />

  <arg name="load_scene" default="true" />
  <arg name="scene_filename" default="dfab_multirobot_light.scene" />


  <!-- <arg name = "irb6640_add_eef" default= "false"/>
  <arg name = "irb6640_eef_filename" default="empty.stl"/>
  <arg name = "irb6640_tcp_offset_xyz" default = "'0 0 0'"/>
  <arg name = "irb6640_tcp_offset_rpy" default = "'0 0 0'"/>
  <arg name = "irb6640_add_sensor_mount" default = "false"/>
  <arg name = "irb6640_sensor_mount_filename" default = "empty.stl"/>
  <arg name = "irb6640_sensor_mount_offset_xyz" default = "'0 0 0'"/>
  <arg name = "irb6640_sensor_mount_offset_rpy" default = "'0 0 0'"/>


  <arg name = "irb4400_add_eef" default= "false"/>
  <arg name = "irb4400_eef_filename" default="empty.stl"/>
  <arg name = "irb4400_tcp_offset_xyz" default = "'0 0 0'"/>
  <arg name = "irb4400_tcp_offset_rpy" default = "'0 0 0'"/>
  <arg name = "irb4400_add_sensor_mount" default = "false"/>
  <arg name = "irb4400_sensor_mount_filename" default = "empty.stl"/>
  <arg name = "irb4400_sensor_mount_offset_xyz" default = "'0 0 0'"/>
  <arg name = "irb4400_sensor_mount_offset_rpy" default = "'0 0 0'"/> -->


  <!-- Non-standard joint names:
       - Create a file [robot_moveit_config]/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N]
       - Update with joint names for your robot (in order expected by rbt controller)
       - and uncomment the following line: -->
  <rosparam command="load" file="$(find abb_irb6640_irb4400_dfab_support)/config/joint_names_irb6640_irb4400.yaml" />

  <remap from="/irb6640/follow_joint_trajectory" to="$(arg 6640_ns)/joint_trajectory_action"/>
  <remap from="/irb4400/follow_joint_trajectory" to="$(arg 4400_ns)/joint_trajectory_action"/>


  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find dfab_irb6640_irb4400_moveit_config)/launch/planning_context.launch" >
    <arg name="load_robot_description" value="true" />

    <!-- <arg name="irb6640_add_eef" value="$(arg irb6640_add_eef)"/>
    <arg name="irb6640_eef_filename" value="$(arg irb6640_eef_filename)"/>
    <arg name="irb6640_tcp_offset_xyz" value="$(arg irb6640_tcp_offset_xyz)"/>
    <arg name="irb6640_tcp_offset_rpy" value="$(arg irb6640_tcp_offset_rpy)"/>
    <arg name="irb6640_add_sensor_mount" value="$(arg irb6640_add_sensor_mount)"/>
    <arg name="irb6640_sensor_mount_filename" value="$(arg irb6640_sensor_mount_filename)"/>
    <arg name="irb6640_sensor_mount_offset_xyz" value="$(arg irb6640_sensor_mount_offset_xyz)"/>
    <arg name="irb6640_sensor_mount_offset_rpy" value="$(arg irb6640_sensor_mount_offset_rpy)"/>

    <arg name="irb4400_add_eef" value="$(arg irb4400_add_eef)"/>
    <arg name="irb4400_eef_filename" value="$(arg irb4400_eef_filename)"/>
    <arg name="irb4400_tcp_offset_xyz" value="$(arg irb4400_tcp_offset_xyz)"/>
    <arg name="irb4400_tcp_offset_rpy" value="$(arg irb4400_tcp_offset_rpy)"/>
    <arg name="irb4400_add_sensor_mount" value="$(arg irb4400_add_sensor_mount)"/>
    <arg name="irb4400_sensor_mount_filename" value="$(arg irb4400_sensor_mount_filename)"/>
    <arg name="irb4400_sensor_mount_offset_xyz" value="$(arg irb4400_sensor_mount_offset_xyz)"/>
    <arg name="irb4400_sensor_mount_offset_rpy" value="$(arg irb4400_sensor_mount_offset_rpy)"/> -->
  </include>


  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)" ns="$(arg 4400_ns)">
    <rosparam command="load" file="$(find abb_irb6640_irb4400_dfab_support)/config/joint_names_irb4400_45_196.yaml" />
    <param name="robot_description" command="xacro  '$(find abb_irb6640_irb4400_dfab_support)/urdf/irb6640_irb4400.xacro'" />
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>

  <group if="$(arg sim)" ns="$(arg 6640_ns)">
    <rosparam command="load" file="$(find abb_irb6640_irb4400_dfab_support)/config/joint_names_irb6640_185_280.yaml" />
    <param name="robot_description" command="xacro  '$(find abb_irb6640_irb4400_dfab_support)/urdf/irb6640_irb4400.xacro'"/>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>

  

  <arg name="use_gui" default="false" />
  <arg name="jnt_stat_source" value="[$(arg 6640_ns)/joint_states, $(arg 4400_ns)/joint_states]" />
  <arg name="jnt_stat_pub_rate" default="5" />


  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="$(arg use_gui)"/>
    <param name="/rate" value="$(arg jnt_stat_pub_rate)"/>
    <rosparam param="/source_list" subst_value="True">$(arg jnt_stat_source)</rosparam>
  </node>


  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <!-- include two motion interfaces for the two robots, each has a namespace -->

  <group unless="$(arg sim)" ns="$(arg 4400_ns)">
    <!-- <rosparam command="load" file="$(find abb_irb6640_irb4400_dfab_support)/config/joint_names_irb4400_45_196.yaml" /> -->
    <include file="$(find abb_irb6640_irb4400_dfab_support)/launch/robot_interface_download_irb4400_45_196.launch" >
      <arg name="robot_ip" value="$(arg irb4400_robot_ip)"/>
    </include>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>
  
  
  <group unless="$(arg sim)" ns="$(arg 6640_ns)">
    <!-- <rosparam command="load" file="$(find abb_irb6640_irb4400_dfab_support)/config/joint_names_irb6640_185_280.yaml" /> -->
    <include file="$(find abb_irb6640_irb4400_dfab_support)/launch/robot_interface_download_irb6640_185_280.launch" >
      <arg name="robot_ip" value="$(arg irb6640_robot_ip)"/>
    </include>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>

  

  <!-- publish the robot state (tf transforms) -->
  

  <include file="$(find dfab_irb6640_irb4400_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find dfab_irb6640_irb4400_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

  <!-- To load a simple geometry scene(xxx.scene) -->
  <group if="$(arg load_scene)">
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(find abb_irb6640_irb4400_dfab_support)/scene/$(arg scene_filename)"/>
  </group>


</launch>